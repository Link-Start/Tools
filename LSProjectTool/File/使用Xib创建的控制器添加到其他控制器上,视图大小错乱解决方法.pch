//
//  使用Xib创建的控制器添加到其他控制器上,视图大小错乱解决方法.pch
//  LSProjectTool
//
//  Created by Xcode on 17/1/12.
//  Copyright © 2017年 Link-Start. All rights reserved.
//

#ifndef __Xib___________________________pch
#define __Xib___________________________pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#endif /* __Xib___________________________pch */



//使用Xib创建的控制器添加到其他控制器上,视图大小错乱解决方法

//在下面的方法中重新设置一下view的frame就可以了()
- (void)viewWillLayoutSubviews {
    
    [super viewWillLayoutSubviews];
    
    CGRect frame = self.view.frame;
    frame.size.width = KScreenWidth;
    [self.view setFrame:frame];
}



1、initWithFrame只适用纯代码创建时调用，不涉及xib或storyboard。



2、initWithCoder、awakeFromNib是从xib、storyboard中创建时会调用。

调用 ，顺序是：initWithCoder  -> awakeFromNib （
- 可以这么来理解：
一开始经过initWithCoder创建出来的控件是死的，然后通过awakeFromNib来唤醒，所以这会有一个先后的调用顺序。



3、所以一般来说，为了安全起见，初始化控件的代码我们写在一个方法里面（类似我上面的initViews方法），然后我们分别在initWithFrame和initWithCoder中都调用一下，这样就保证了无论你是通过什么方式创建的控件，代码都能起到作用。




initWithCoder 是 nib loader 分配并初始化各个控件的时候由系统调用的，由于 xib 或者故事板中的控件加载顺序是不一定的，所以在 initWithCoder 中是无法获取到 outlet（即子视图子控件）的。




awakeFromNib 则是当所有的 outlet 和事件都创建并绑定之后由系统调用的，这是获取 outlet 并且赋予默认值的好地方。
